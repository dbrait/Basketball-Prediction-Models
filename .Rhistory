teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
library(dplyr)
library(nbastatR)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
Efg <- teamDefense %>% select(team, pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
library(data.table)
library(formattable)
library(jsonlite)
library(lubridate)
library(magrittr)
library(purrr)
library(rbokeh)
library(stringr)
library(tidyr)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
Efg <- teamDefense %>% select(team, pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
Efg
library(kohonen)
som_grid <- somgrid(xdim = 200, ydim=200, topo="hexagonal")
som_model <- som(teamDefense,
grid=som_grid,
rlen=100,
alpha=c(0.05, 0.01),
keep.data=TRUE,
n.hood="circular")
som_model <- som(Efg,
grid=som_grid,
rlen=100,
alpha=c(0.05, 0.01),
keep.data=TRUE,
n.hood="circular")
Efg <- teamDefense %>% select(pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
library(data.table)
library(formattable)
library(dplyr)
library(jsonlite)
library(lubridate)
library(magrittr)
library(purrr)
library(rbokeh)
library(tidyr)
library(stringr)
library(ggplot2)
library(nbastatR)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
Efg <- teamDefense %>% select(team, pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
library(kohonen)
som_grid <- somgrid(xdim = 200, ydim=200, topo="hexagonal")
som_model <- som(teamDefense,
grid=som_grid,
rlen=100,
alpha=c(0.05, 0.01),
keep.data=TRUE,
n.hood="circular")
str(Efg)
library(data.table)
library(formattable)
library(dplyr)
library(jsonlite)
library(magrittr)
library(purrr)
library(rbokeh)
library(lubridate)
library(tidyr)
library(stringr)
library(ggplot2)
library(nbastatR)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
Efg <- teamDefense %>% select(pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
library(kohonen)
som_grid <- somgrid(xdim = 200, ydim=200, topo="hexagonal")
som_model <- som(teamDefense,
grid=som_grid,
rlen=100,
alpha=c(0.05, 0.01),
keep.data=TRUE,
n.hood="circular")
str(Efg)
som_model <- som(Efg,
grid=som_grid,
rlen=100,
alpha=c(0.05, 0.01),
keep.data=TRUE,
n.hood="circular")
str(Efg)
library(stattleshipR)
install.packages(stattleshipR)
install.packages("stattleshipR")
devtools::install_github("stattleship/stattleship-r")
library(stattleshipR)
set_token("d82699dc35fb5088a7be0cb5f9ee42c5")
league = "nba"
sport = "basketball"
ep = "players"
q_body = list()
players = ss_get_result(sport=sport, league=league, ep=ep, query=q_body, version=1, walk=TRUE)
library(curl)
install.packages("curl")
install.packages("curl")
library(curl)
library(curl)
install.packages("curl")
library(curl)
library(stattleshipR)
set_token("d82699dc35fb5088a7be0cb5f9ee42c5")
league = "nba"
sport = "basketball"
ep = "players"
q_body = list()
players = ss_get_result(sport=sport, league=league, ep=ep, query=q_body, version=1, walk=TRUE)
players_df = do.call("rbind", lapply(players, function(x) x$players))
league = "nba"
sport = "basketball"
ep = "stats"
q_body = list(stat="triple_double", type="basketball_doubles_stat")
tripdubs = ss_get_result(sport=sport, league=league, ep=ep, query=q_body, version=1, walk=FALSE)
summary(players_df)
players_df
tripdubs
league = "nba"
sport = "basketball"
ep = "stats"
q_body = list(stat="triple_double", type="basketball_doubles_stat")
tripdubs = ss_get_result(sport=sport, league=league, ep=ep, query=q_body, version=1, walk=FALSE)
head(players_df)
?kohonen
??kohonen
som??
asd
??som
str(Egf)
str(Efg)
library(data.table)
library(dplyr)
library(formattable)
library(lubridate)
library(magrittr)
library(purrr)
library(stringr)
library(tidyr)
library(nbastatR)
library(ggplot2)
library(rbokeh)
library(jsonlite)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
library(data.table)
library(dplyr)
library(formattable)
library(data.table)
library(dplyr)
library(formattable)
library(jsonlite)
library(lubridate)
library(magrittr)
library(purrr)
library(rbokeh)
library(stringr)
library(tidyr)
library(ggplot2)
library(nbastatR)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
install.packages("digest")
library(lubridate)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
library(data.table)
library(dplyr)
library(formattable)
library(jsonlite)
library(lubridate)
library(magrittr)
library(purrr)
library(rbokeh)
library(stringr)
library(tidyr)
library(ggplot2)
library(nbastatR)
teamDefense <- get_all_team_synergy_stats(include_defense=T,
include_offense=F)
Efg <- teamDefense %>% select(team, pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
str(Efg)
head(Efg)
data(wines)
summary(wines)
data("wines")
Efg
library(stats)
KMe <- kmeans(teamDefense, 5, iter.max=10, nstart=1)
summary(teamDefense)
KMe <- kmeans(Efg, 5, iter.max=10, nstart=1)
KMe <- kmeans(Efg, centers=10, iter.max=10, nstart=1)
Efg <- teamDefense %>% select(pct.efg.cut, pct.efg.handoff, pct.efg.isolation, pct.efg.misc, pct.efg.offrebound,
pct.efg.offscreen, pct.efg.postup, pct.efg.prballhandler, pct.efg.prrollman, pct.efg.spotup,
pct.efg.transition)
KMe <- kmeans(Efg, centers=10, iter.max=10, nstart=1)
plot(KMe)
summary(KMe)
Efg$hclust_assignments <- Efg %>% hclust(method="single")
get_pbp("0021500431")
get_pbp <- function(gameid){
URL1 <- paste("http://stats.nba.com/stats/playbyplayv2?EndPeriod=10&EndRange=55800&GameID=",gameid,"&RangeType=2&StartPeriod=1&StartRange=0",sep="")
the.date.file <- fromJSON(URL1)
test <- the.data.file$resultSets$rowSet
test2 <- test[[1]]
test3 <- data.frame(test2)
coltest <- the.date.file$resultSets$headers
colnames(test3) <- coltest[[1]]
return (test3)
}
get_pbp("0021500431")
get_pbp(0021500431)
library(RCurl)
library(jsonlite)
library(dplyr)
get_pbp <- function(gameid){
URL1 <- paste("http://stats.nba.com/stats/playbyplayv2?EndPeriod=10&EndRange=55800&GameID=",gameid,"&RangeType=2&StartPeriod=1&StartRange=0",sep="")
the.date.file <- fromJSON(URL1)
test <- the.data.file$resultSets$rowSet
test2 <- test[[1]]
test3 <- data.frame(test2)
coltest <- the.date.file$resultSets$headers
colnames(test3) <- coltest[[1]]
return (test3)
}
get_pbp(0021500431)
get_pbp("0021500431")
get_pbp(0021500431)
gameid <- "0021500431"
pbp <- get_pbp(gameid)
get_pbp <- function(gameid){
URL1 <- paste("http://stats.nba.com/stats/playbyplayv2?EndPeriod=10&EndRange=55800&GameID=",gameid,"&RangeType=2&StartPeriod=1&StartRange=0",sep="")
the.data.file <- fromJSON(URL1)
test <- the.data.file$resultSets$rowSet
test2 <- test[[1]]
test3 <- data.frame(test2)
coltest <- the.date.file$resultSets$headers
colnames(test3) <- coltest[[1]]
return (test3)
}
gameid <- "0021500431"
pbp <- get_pbp(gameid)
get_pbp <- function(gameid){
URL1 <- paste("http://stats.nba.com/stats/playbyplayv2?EndPeriod=10&EndRange=55800&GameID=",gameid,"&RangeType=2&StartPeriod=1&StartRange=0",sep="")
the.date.file <- fromJSON(URL1)
test <- the.date.file$resultSets$rowSet
test2 <- test[[1]]
test3 <- data.frame(test2)
coltest <- the.date.file$resultSets$headers
colnames(test3) <- coltest[[1]]
return (test3)
}
gameid <- "0021500431"
pbp <- get_pbp(gameid)
head(pbp)
library(data.table)
library(dplyr)
library(formattable)
library(jsonlite)
library(magrittr)
library(lubridate)
library(purrr)
library(rbokeh)
library(stringr)
library(tidyr)
library(ggplot2)
library(nbastatR)
teamDefense <- get_nba_synergy_stats(include_offense=F,
include_defense=T,
type_table="team")
defCut <- get_nba_synergy_stats(table_name="Cut",
include_defense=T,
include_offense=F,
type_table="team")
defteamIsolation <- get_nba_synergy_stats(table_name="Isolation",
include_offense=F,
include_defense=T,
type_table="team")
devtools::install_github("abresler/nbastatR")
library(data.table)
library(dplyr)
library(formattable)
library(jsonlite)
library(lubridate)
library(magrittr)
library(purrr)
library(rbokeh)
library(stringr)
library(tidyr)
library(ggplot2)
library(nbastatR)
get_nba_days_scores("11/05/15")
get_nba_franchise_data(return_franchises = c("all"))
get_nba_players_ids(active_only = F)
teamDefense <- get_nba_synergy_stats(include_offense=F,
include_defense=T,
type_table="team")
defCut <- get_nba_synergy_stats(table_name="Cut",
include_defense=T,
include_offense=F,
type_table="team")
playerIso <- get_nba_synergy_stats(table="Isolation",
include_offense=T,
include_defense=F,
type_table="player")
defCut <- get_nba_synergy_stats(table_name="Cut",
include_defense=T,
include_offense=F,
type_table="team")
offReb <- get_nba_synergy_stats(table="Offensive Rebounds",
include_offense=T,
include_defense=F,
type_table="team")
library(nbastatR)
get_nba_days_scores("11/05/15")
defCut <- get_nba_synergy_stats(table_name="Cut",
include_defense=T,
include_offense=F,
type_table="team")
